name: Release-plz

permissions:
  pull-requests: write
  contents: write

on:
  push:
    branches:
      - main

jobs:
  release-plz:
    name: Release-plz
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PLZ_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run release-plz
        uses: MarcoIeni/release-plz-action@v0.5.85
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLZ_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_SECRET }}

      - name: Clean up stale release-plz branches
        run: |
          git --no-pager branch --remote |\
            grep 'origin/release-plz-' |\
            sort -r |\
            tail -n +2 |\
            sed 's/origin\///' |\
            xargs -I {} git push origin --delete {}
      
      - name: Identify c2patool release tag
        run: |
          echo "TO DO: Identify c2patool release tag, if any"
          exit 1

  # publish-c2patool-binaries:
  #   name: Publish c2patool binaries
  #   runs-on: ${{ matrix.os }}
  #   needs: release-plz

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ macos-latest, ubuntu-latest, windows-latest ]
  #       rust_version: [ stable ]
  #       experimental: [ false ]
  #       include:
  #         - os: macos-latest
  #           artifact_name: c2patool_mac_universal.zip
  #           uploaded_asset_name: c2patool-${{ needs.repo-prep.outputs.new-tag }}-universal-apple-darwin.zip
  #         - os: ubuntu-latest
  #           artifact_name: c2patool_linux_intel.tar.gz
  #           uploaded_asset_name: c2patool-${{ needs.repo-prep.outputs.new-tag }}-x86_64-unknown-linux-gnu.tar.gz
  #         - os: windows-latest
  #           artifact_name: c2patool_win_intel.zip
  #           uploaded_asset_name: c2patool-${{ needs.repo-prep.outputs.new-tag }}-x86_64-pc-windows-msvc.zip

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         ref: ${{ needs.repo-prep.outputs.commit-hash }}

  #     - name: Install Rust toolchain
  #       uses: dtolnay/rust-toolchain@master
  #       with:
  #         toolchain: ${{ matrix.rust_version }}
  #         components: llvm-tools-preview

  #     - name: Install cargo-sbom
  #       uses: baptiste0928/cargo-install@v3
  #       with:
  #         crate: cargo-sbom
  #         version: '0.9.1'

  #     - name: Cache Rust dependencies
  #       uses: Swatinem/rust-cache@v2

  #     - name: Run make release
  #       run: make release

  #     - name: Upload binary to GitHub
  #       uses: svenstaro/upload-release-action@v1-release
  #       with:
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}
  #         file: target/${{ matrix.artifact_name }}
  #         asset_name: ${{ matrix.uploaded_asset_name }}
  #         tag: ${{ needs.repo-prep.outputs.new-tag }}
  #         overwrite: true

  #     - name: Generate SBOM
  #       run: cargo sbom > c2patool.${{ matrix.os }}.sbom.json

  #     - name: Upload SBOM to Github
  #       uses: svenstaro/upload-release-action@v1-release
  #       with:
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}
  #         file: c2patool.${{ matrix.os }}.sbom.json
  #         asset_name: c2patool-${{ needs.repo-prep.outputs.new-tag }}-sbom.json
  #         tag: ${{ needs.repo-prep.outputs.new-tag }}
  #         overwrite: true

