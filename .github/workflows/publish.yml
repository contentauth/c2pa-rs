name: Publish release

on:
  workflow_dispatch:

jobs:
  publish:
    concurrency: publish-mutex
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.GH_ADMIN_COMMIT_TOKEN }}

    - name: Get latest existing tag
      uses: actions-ecosystem/action-get-latest-tag@v1
        ## NEEDS UPDATE for set-output deprecation.
        ## See https://github.com/actions-ecosystem/action-get-latest-tag/issues/25.
      id: get-latest-tag
      with:
        semver_only: true

    - name: Set new version
      uses: paulhatch/semantic-version@v5.0.2
      id: set-version
      with:
        tag_prefix: "v"
        version_format: "${major}.${minor}.${patch}"
        major_pattern: "(MAJOR)"
        minor_pattern: "(MINOR)"

    - name: Generate changelog since last tag
      uses: mathiasvr/command-output@v1
        ## NEEDS UPDATE for set-output deprecation.
        ## See https://github.com/mathiasvr/command-output/issues/4.
      id: changelog
      with:
        run: git log --format="* %s" ${{ steps.get-latest-tag.outputs.tag }}..HEAD | { grep -v "(IGNORE)" || :; }

    - name: Log version & changelog
      run: |
        echo "Version: $VERSION"
        echo "Version tag: $VERSION_TAG"
        echo "Latest tag detected: $LATEST_TAG"
        echo "Changelog: $CHANGELOG"
      env:
        VERSION: ${{ steps.set-version.outputs.version }}
        VERSION_TAG: ${{ steps.set-version.outputs.version_tag }}
        LATEST_TAG: ${{ steps.get-latest-tag.outputs.tag }}
        CHANGELOG: ${{ steps.changelog.outputs.stdout }}

    - name: Prevent empty release
      if: ${{ steps.changelog.outputs.stdout == '' }}
      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed("No changes since prior release")

    - name: Update changelog
      run: |
        (head -8 CHANGELOG.md && echo "## $VERSION" && date "+_%d %B %Y_" && echo "" && (echo "$CHANGELOG" | sed -E 's_\(#([0-9]+)\)_([#\1](https://github.com/contentauth/c2pa-rs/pull/\1)\)_') && tail -n +9 CHANGELOG.md) > CHANGELOG.new.md
        mv CHANGELOG.new.md CHANGELOG.md
      env:
        VERSION: ${{ steps.set-version.outputs.version }}
        CHANGELOG: ${{ steps.changelog.outputs.stdout }}

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable

    - name: Bump crate versions
      run: |
        sed -i "s/^version = \"[^\"]*\"$/version = \"$VERSION\"/;" sdk/Cargo.toml
        sed -i "s/^version = \"[^\"]*\"$/version = \"$VERSION\"/;" make_test_images/Cargo.toml
        sed -i "s/^c2pa = \"[^\"]*\"$/c2pa = \"$VERSION\"/;" README.md
      env:
        VERSION: ${{ steps.set-version.outputs.version }}

    - name: Report differences for "prepare (release)" commit
      run: git diff

    - name: Commit Cargo.toml and changelog
      uses: stefanzweifel/git-auto-commit-action@v4
        ## NEEDS UPDATE for set-output deprecation.
        ## See https://github.com/stefanzweifel/git-auto-commit-action/issues/250.
      id: commit
      with:
        commit_message: Prepare ${{ steps.set-version.outputs.version }} release
        commit_user_name: Adobe CAI Team
        commit_user_email: noreply@adobe.com

    - name: Ensure semantic versioning requirements are met
      uses: obi1kenobi/cargo-semver-checks-action@v1
      with:
        crate-name: c2pa

    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        body: ${{ steps.changelog.outputs.stdout }}
        commit: ${{ steps.commit.outputs.commit_hash }}
        prerelease: true # remove at 1.0
        tag: ${{ steps.set-version.outputs.version_tag }}
        token: ${{ secrets.GH_ADMIN_COMMIT_TOKEN }}

    - name: Publish crate
      run: |
        cargo publish --token $CRATES_IO_SECRET -p c2pa
      env:
        CRATES_IO_SECRET: ${{ secrets.CRATES_IO_SECRET }}
