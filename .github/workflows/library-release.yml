name: Publish c2pa-library binaries

on:
  push:
    tags:
      - 'c2pa-v*' # Trigger on version tags (e.g., v1.0.0)
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  build:
    name: Publish c2pa-library binaries
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        rust_version: [ stable ]
        experimental: [ false ]
        include:
          - os: macos-latest
            target: aarch64-apple-darwin

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      # Install openssl for Windows
      - name: Install dependencies for OpenSSL (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          choco install openssl --version=3.5.0 --no-progress
          $env:PATH += ";C:\Program Files\OpenSSL\bin"
          openssl version
          echo "OPENSSL_DIR=C:\Program Files\OpenSSL" >> $env:GITHUB_ENV
          echo "OPENSSL_STATIC=1" >> $env:GITHUB_ENV
          dir "C:\Program Files\OpenSSL"

      - name: Build release
        run: make release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.target }}-release
          path: target/artifacts/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: true
          prerelease: true
 
      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in artifacts/*; do
            echo "Uploading $file..."
            gh release upload "${{ github.ref_name }}" "$file" --clobber
          done

