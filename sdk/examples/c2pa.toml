# c2pa-rs Configuration File
# Version: 1.0

# System-wide settings.
[settings]
# Version information.
version_major = 1
version_minor = 0

# Trust settings for certificate validation.
[settings.trust]
# String to user-provided trust anchors (PEM format).
user_anchors = ""
# String to system trust anchors (PEM format).
trust_anchors = ""
# String to trust configuration.
trust_config = ""
# Path to allowed certificate list (PEM format).
allowed_list = ""

# Core functionality.
[settings.core]
# Hash algorithm to use (sha256, sha384, sha512).
hash_alg = "sha256"
# Prefer box hash over other hashing methods such as data hash.
prefer_box_hash = false
# Prefer BMFF merkle tree.
prefer_bmff_merkle_tree = false
# Compress manifests to reduce size.
compress_manifests = true

# Verification settings.
[settings.verify]
# Verify manifests after reading.
verify_after_reading = true
# Verify manifests after signing.
verify_after_sign = true
# Fetch OCSP responses for certificate validation.
ocsp_fetch = false
# Fetch remote manifests.
remote_manifest_fetch = true
# Use strict c2pa v1 validation.
strict_v1_validation = false

# Configuration for the `Builder`.
[builder]

# Claim generator info list.
[builder.claim_generator_info]
# A human readable name.
name = "My Service"
# A human readable string of the product's version.
version = "1.0"
# URL to the icon.
icon = ""
# The operating system the claim generator is running on.
operating_system = ""
# Arbitrary fields can also be defined.
#
# By default, the SDK adds a field "org.cai.c2pa_rs" with the value
# being the current version of the SDK.
some_other_field = ""

# Settings for configuring how c2pa.created actions are auto created.
#
# This is a convenience setting and it can be disabled if the information
# is provided manually.
[builder.auto_created_action]
# Whether to auto create the c2pa.created action.
enabled = true
# The source type field is required for the c2pa.created action.
#
# For more information, see `c2pa::assertions::actions::source_type`.
source_type = "http://c2pa.org/digitalsourcetype/empty"

# Settings for configuring how c2pa.opened actions are auto created.
#
# This is a convenience setting and it can be disabled if the information
# is provided manually.
[builder.auto_opened_action]
# Whether to auto create the c2pa.opened action.
enabled = true
# For more information, see `c2pa::assertions::actions::source_type`.
#
# Note this field is optional for the c2pa.opened action.
source_type = "http://c2pa.org/digitalsourcetype/empty"

# Settings for configuring how c2pa.placed actions are auto created.
#
# This is a convenience setting and it can be disabled if the information
# is provided manually.
[builder.auto_placed_action]
# Whether to auto create the c2pa.placed action.
enabled = true
# TODO: doc these fields better
# For more information, see `c2pa::assertions::actions::source_type`.
#
# Note this field is optional for the c2pa.placed action.
source_type = "http://c2pa.org/digitalsourcetype/empty"

# A signer can be loaded in the API with the function `Settings::signer`.
[builder.signer.local]
# Algorithm to use for signing.
alg = "sha256"
# Certificate used for signing (PEM format).
sign_cert = ""
# Private key used for signing (PEM format).
private_key = ""
# Time Stamp Authority URL for signing.
tsa_url = ""

# TODO: doc how it works
# Alternatively, you can specify a remote signer, which is also loaded
# via `Settings::signer`.
#
# Note that you may not specify both a local and remote signer at the same time.
[builder.signer.remote]
url = "https://www.google.com"

# Similar to a normal signers, you can specify CAWG signers, loadable with the
# function `Settings::cawg_signer`.
[builder.cawg_signer.local]
# Algorithm to use for signing.
alg = "sha256"
# Certificate used for signing (PEM format).
sign_cert = ""
# Private key used for signing (PEM format).
private_key = ""
# Time Stamp Authority URL for signing.
tsa_url = ""

# The same rules that apply for normal signers also apply for CAWG signers. You may
# only specify either a local or remote, not both.
[builder.cawg_signer.remote]
url = "https://www.google.com"

# Settings for automatic thumbnail generation.
[builder.thumbnail]
# Whether to enable automatic thumbnail generation.
enabled = true
# Whether to ignore errors when generating a thumbnail and continue signing.
ignore_errors = false
# The size of the longest edge of the thumbnail.
long_edge = 1024
# The output format of the thumbnail.
#
# If this field isn't specified, the thumbnail format will correspond to the
# input format.
format = "png"
# Whether or not to prefer a smaller sized media format for the thumbnail.
#
# The "format" option takes precedence over this field.
#
# For instance, if the source input type is a PNG, but it doesn't have an alpha channel,
# the image will be converted to a JPEG of smaller size.
prefer_smallest_format = true
# The output quality of the thumbnail (low, medium, high).
quality = "medium"
